### DO NOT EDIT THIS FILE
### This file is auto-generated by the Dyad command-line compiler.
### If you edit this code it is likely to get overwritten.
### Instead, update the Dyad source code and regenerate this file


@testset "Running test case1 for ChuaCircuit" begin
  using CSV, DataFrames, Plots

  @mtkbuild model = ChuaCircuit()
  u0 = []
  prob = ODEProblem(model, u0, (0, 50000))
  sol = solve(prob, DefaultODEAlgorithm())
  @test SciMLBase.successful_retcode(sol)
# Signals selected for regression testing: ["capacitor1.v"]
  ref_times = [sol(t, idxs=:t) for t in LinRange(sol[:t][1], sol[:t][end], 100)]
  if get(ENV, "DYAD_UPDATE_REFS", "") !== ""
    # If asked to update snapshots, write out reference data for all signals
    mkpath("snapshots")
    CSV.write("snapshots/ChuaCircuit_case1_sig0.ref", DataFrame(t=ref_times, expected=[sol(t, idxs=model.capacitor1.v) for t in ref_times]))
  end
    if isfile("snapshots/ChuaCircuit_case1_sig0.ref")
      ref = CSV.read("snapshots/ChuaCircuit_case1_sig0.ref", DataFrame)
      [@test ref.expected[i] â‰ˆ sol(ref.t[i], idxs=model.capacitor1.v) for i in 1:length(ref.expected)]
      if get(ENV, "DYAD_COMPARISONS", "") !== ""
        df = DataFrame(t=sol[:t], actual=sol[model.capacitor1.v])
        dfr = CSV.read("snapshots/ChuaCircuit_case1_sig0.ref", DataFrame)
        plot(sol, idxs=[model.capacitor1.v], width=2, label="Actual value of capacitor1.v")
        scatter!(dfr.t, dfr.expected, mc=:red, ms=3, label="Expected value of capacitor1.v")
        mkpath("comparisons")
        savefig("comparisons/ChuaCircuit_case1_sig0.png")
      end
    else
      mkpath("snapshots")
      CSV.write("snapshots/ChuaCircuit_case1_sig0.ref", DataFrame(t=ref_times, expected=[sol(t, idxs=model.capacitor1.v) for t in ref_times]))
    end
end
